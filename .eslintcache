[{"/home/kimia/Desktop/bookapp/bookapp/src/index.js":"1","/home/kimia/Desktop/bookapp/bookapp/src/reportWebVitals.js":"2","/home/kimia/Desktop/bookapp/bookapp/src/App.js":"3","/home/kimia/Desktop/bookapp/bookapp/src/Routes.js":"4","/home/kimia/Desktop/bookapp/bookapp/src/Pages/Home.js":"5","/home/kimia/Desktop/bookapp/bookapp/src/Pages/AdDetails.js":"6","/home/kimia/Desktop/bookapp/bookapp/src/Pages/AdAll.js":"7","/home/kimia/Desktop/bookapp/bookapp/src/Pages/deleteAd.js":"8","/home/kimia/Desktop/bookapp/bookapp/src/Pages/AdForm.js":"9","/home/kimia/Desktop/bookapp/bookapp/src/Pages/SignUp.js":"10","/home/kimia/Desktop/bookapp/bookapp/src/Pages/SignIn.js":"11","/home/kimia/Desktop/bookapp/bookapp/src/SideMenu.js":"12"},{"size":501,"mtime":1607522292957,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1607412985492,"results":"15","hashOfConfig":"14"},{"size":2657,"mtime":1607590223382,"results":"16","hashOfConfig":"14"},{"size":2063,"mtime":1607591133658,"results":"17","hashOfConfig":"14"},{"size":3379,"mtime":1607589759868,"results":"18","hashOfConfig":"14"},{"size":5875,"mtime":1607590916625,"results":"19","hashOfConfig":"14"},{"size":4638,"mtime":1607586854873,"results":"20","hashOfConfig":"14"},{"size":2420,"mtime":1607586470854,"results":"21","hashOfConfig":"14"},{"size":5244,"mtime":1607586257687,"results":"22","hashOfConfig":"14"},{"size":5161,"mtime":1607586324243,"results":"23","hashOfConfig":"14"},{"size":3165,"mtime":1607591233774,"results":"24","hashOfConfig":"14"},{"size":1405,"mtime":1607589588257,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gd3tbd",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"41"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/kimia/Desktop/bookapp/bookapp/src/index.js",[],"/home/kimia/Desktop/bookapp/bookapp/src/reportWebVitals.js",[],"/home/kimia/Desktop/bookapp/bookapp/src/App.js",["54"],"/home/kimia/Desktop/bookapp/bookapp/src/Routes.js",[],"/home/kimia/Desktop/bookapp/bookapp/src/Pages/Home.js",["55","56","57"],"/home/kimia/Desktop/bookapp/bookapp/src/Pages/AdDetails.js",["58","59","60","61","62","63","64"],"/home/kimia/Desktop/bookapp/bookapp/src/Pages/AdAll.js",["65","66","67","68","69","70","71"],"import React, {Component} from \"react\";\nimport axios from \"axios\";\nimport SideMenu from './../SideMenu';\nimport { Redirect } from 'react-router';\n// import './AddAll.css'\nimport 'semantic-ui-css/semantic.min.css';\n\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Segment,\n  Checkbox\n} from \"semantic-ui-react\";\n\n\nexport default class AdAll extends Component {\n    state = {\n        lists: [{\n            id: 1,\n            title: \"طراحی الگوریتم\",\n            author: [\"ریچارد نیپولیتان\"],\n            image: \"/images/default.jpg\",\n            description: \"قیمت بسیار ارزان - ویرایش چهارم\",\n            sell: \"خرید\"\n\n        },\n            {\n                id: 2,\n                title: \"هالیدی۱ \",\n                author: \"دکتر محمد ابراهیم ابوکاظمی\",\n                image: \"/images/default.jpg\",\n                description: \"کتاب هالیدی ۱ مخصوص درس فیزیک ۱ ویرایش هشتم قیمت مناسب بسیار تمیز\",\n                sell: \"فروش\",\n            }],\n        redirect: false,\n        topass: 1,\n\n    };\n\n    redirectHandler = (val) => {\n    \tthis.setState({\n    \t\tredirect: true,\n    \t\ttopass: val.target.name\n    \t});\n    };\n\n    renderRedirect = (e) => {\n    \tif (this.state.redirect) {\n    \t    return (\n    \t\t<Redirect to={{\n\t\t\t\t\t\t\t\t\t\t  pathname: '/ad/detail',\n\t\t\t\t\t\t\t\t\t\t  state: {\n\t\t\t\t\t\t\t\t\t\t    adId: this.state.topass\n\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t}} />\n    \t\t)\n    \t}\n    }\n    componentDidMount = () => {\n        axios\n            .get(\"http://localhost:8000/api/asknima\")\n            .then((res) => {\n                var a = this.state.list\n                for (var i = 0; i < res.data.length; i++) {\n                    a.push({id: res.data[i].id, title: res.data[i].title, author: res.data[i].author,\n                        image:res.data[i].image? res.data[i].image: \"/images/default.jpg\",\n                        description: res.data[i].description, sell: res.data[i].sell\n                    })\n                }\n                console.log(a)\n                this.setState({\n                    list: a\n                })\n            })\n            .catch((err) => {});\n    };\n    render() {\n        return (\n            <div className=\"App\">\n                <SideMenu classIn={\"allads\"} logged_in={this.props.logged_in}/>\n                <div className=\"ui container\">\n\n                    <div className=\"ui message\">\n                        <h1 className=\"ui huge header\">کتاب‌باز</h1>\n                        <p className=\"lead\">\n                            مکانی برای تبادل کتاب های شما\n                        </p>\n                    </div>\n                </div>\n                <br/>\n                <div className=\"ui container\" dir=\"ltr\">\n                    <div className=\"ui relaxed divided items\">\n                        {this.state.lists.map((ad) => (\n                            <div key={{ad}} className=\"item\">\n                                <div className=\"ui small image\">\n                                    <img src={ad.image} alt=\"Cinque Terre\" width=\"600\" height=\"400\"/>\n                                </div>\n                                <div className=\"content\" style={{textAlign:\"right\"}}>\n\n                                    <a target=\"_blank\" href=\"/ads/\" className=\"header\" dir=\"rtl\" >{ad.title}</a>\n\n                                    <div className=\"meta\">\n                                        <a>{ad.author}</a>\n                                    </div>\n\n                                    <div className=\"description\">{ad.description}</div>\n                                    <br />\n                                    <div className=\"ui label\">{ad.sell}</div>\n                                    <div className=\"extra\">\n                                     <Button target=\"_blank\" name={ad.id} onClick={this.redirectHandler.bind(this)}\n                                           className=\"ui right floated primary button\">\n                                            اطلاعات بیشتر\n                                            <i className=\"right chevron icon\"></i>\n                                       </Button>\n                                        \n\n                                    </div>\n                                </div>\n                            </div>\n\n\n                        ))}\n                    </div>\n                    {this.renderRedirect()}\n                </div>\n\n\n                <div className=\"clearfix\"></div>\n\n            </div>\n        )\n    }\n}",["72","73"],"/home/kimia/Desktop/bookapp/bookapp/src/Pages/deleteAd.js",[],"/home/kimia/Desktop/bookapp/bookapp/src/Pages/AdForm.js",["74","75"],"import React, { Component } from \"react\";\nimport axios, {put} from \"axios\";\n\nimport { Redirect } from 'react-router';\n\nimport SideMenu from './../SideMenu';\n\n\nimport \"semantic-ui-css/semantic.min.css\";\n\n\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Segment,\n  Checkbox\n} from \"semantic-ui-react\";\n\nimport \"./new_ad.css\"\n\nexport default class AdForm extends Component {\n\tstate = {\n\t    bookName:\"\",\n\t    authorName:\"\",\n\t    image: \"/images/books.jpg\",\n\t    description:\"\",\n\t    error_message:\"مسئله\",\n\t    for_sale: false,\n      redirect: false,\n      redirectBack: false,\n      adId: 0,\n  \t};\n\n  \tfileInputRef = React.createRef();\n\n  \tcomponentDidMount() {\n  \t\tif (this.props.classIn===\"editad\") {\n  \t\t\tthis.setState({\n  \t\t\t\tbookName: \"جنایات و مکافات\",\n  \t\t\t\tauthorName: \"داستایوفسکی\",\n  \t\t\t\timage: \"باید این رو درست کنم\",\n  \t\t\t\tdescription: \"وضیحات\",\n  \t\t\t\tfor_sale: true,\n          adId: 2\n  \t\t\t})\n  \t\t}\n  \t};\n\n\n\tfileChange = (e) => {\n\t    this.setState({ image: e.target.files[0] }, () => {\n\t      console.log(\"File uploaded --->\", this.state.image);\n\t    });\n  \t};\n\n  \tfileUpload = file => {\n\t  \tconst url = \"http://localhost:8000/api/asknima\";\n\t    const formData = new FormData();\n\t    formData.append(\"file\", file);\n\n\t    const config = {\n\t      headers: {\n\t        \"Content-type\": \"multipart/form-data\"\n\t      }\n\t    };\n\t    return put(url, formData, config);\n  \t};\n\n  \thandleToggle = (e) => {\n  \t\tthis.setState ({\n  \t\t\tfor_sale: !this.state.for_sale\n  \t\t})\n  \t};\n\n\thandleInput = (e) => { \n\t\t\n\t    this.setState({ \n\t        [e.target.name]: e.target.value, \n\t    }); \n\t\t\n\t}; \n  renderRedirectBack = (e) => {\n        if (this.state.redirectBack) {\n            return (\n            <Redirect to={{\n                                          pathname: '/ad/detail',\n                                          state: {\n                                            adId: this.state.adId\n                                          }\n                                        }} />\n            )\n        }\n        if (this.state.redirect) {\n            return (\n                <Redirect to={{\n                    pathname:'/ad/',\n                }} /> )\n        }\n    };\n\thandleSubmit = (e) => { \n\t  e.preventDefault(); \n\t  this.fileUpload(this.state.image).then(response => {\n      \tconsole.log(response.data);\n    });\n\n\n\t  axios \n\t      .post(\"http://localhost:8000/api/asknima\", { \n\t          bookName: this.state.bookName, \n\t          authorName: this.state.authorName,\n\t          image: this.state.image,\n\t          description: this.state.description,\n\t          for_sale: this.state.for_sale\n\t      }) \n        .then((res) => { \n            if(this.props.classIn===\"editad\") {\n              this.setState({\n                redirectBack: true\n              })\n            } else {\n              this.setState({\n                redirect: true\n              })\n            }\n            })\n\t      .catch((err) => {\n\t        \n\t        \n\t      }); \n\t}; \n\trender () {\n\t\treturn (\n\n\t\t\t<div  className=\"App\">\n\n\t\t\t\t<SideMenu classIn={this.props.classIn}logged_in={this.props.logged_in}/>\n\t\t\t\t<div class=\"ui container\">\n\n        <div class=\"ui message\">\n            <h1 class=\"ui huge header\">کتاب‌باز</h1>\n            <p class=\"lead\">\n                مکانی برای تبادل کتاب های شما\n            </p>\n        </div>\n    </div>\n    <br />\n    <br />\n\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" dir=\"rtl\">\n    <Grid.Column style={{ maxWidth: 700, backgroundColor:\"#e0e0eb\"}} >\n           \n            \n    <Form onSubmit={this.handleSubmit} class=\"ui right\">\n    <Form.Field>\n      <label style={{textAlign:\"right\"}}>تصویر:</label>\n      <Form.Input\n        placeHolder= \"تصویر\"\n      \tref={this.fileInputRef}\n      \ttype=\"file\"\n      \tname=\"image\"\n      \tonChange= {this.fileChange}\n      />\n    </Form.Field>\n    <Form.Field>\n\n      <label style={{textAlign:\"right\"}}>نام کتاب:</label>\n      <input\n        placeHolder= \"نام کتاب\"\n      \tname=\"bookName\"\n      \tvalue={this.state.bookName}\n      \tonChange= {this.handleInput}\n\n      />\n    </Form.Field>\n    <Form.Field>\n      <label style={{textAlign:\"right\"}}>نام نویسنده:</label>\n      <input\n        dir=\"rtl\"\n      \tname=\"authorName\"\n      \tvalue={this.state.authorName}\n      \tonChange= {this.handleInput}\n        placeHolder=\"نام نویسنده\"\n      />\n    </Form.Field>\n    <Form.Field>\n      <label style={{textAlign:\"right\"}}>توضیحات:</label>\n      <Form.TextArea \n      \tname=\"description\"\n      \tvalue={this.state.description}\n      \tonChange= {this.handleInput}\n        placeHolder=\"توضیحات\"\n      /> \n    </Form.Field>\n    <Form.Field style={{textAlign:\"right\"}}>\n      <Checkbox label='فروشی' name=\"for_sale\" checked={this.state.for_sale} onChange={this.handleToggle.bind(this)}/>\n    </Form.Field>\n\n    <Button type='submit' color=\"green\" >ثبت</Button>\n\n  </Form>\n  {this.renderRedirectBack()}\n {this.state.error_message && <Message\n      error\n      header='مشکل در ثبت اطلاعات'\n      content= {this.state.error_message}\n    />}\n\n                      </Grid.Column>\n\n        </Grid>\n    </div>\n\t\t\t)\n\t}\n}","/home/kimia/Desktop/bookapp/bookapp/src/Pages/SignUp.js",["76","77","78"],"import React, { Component } from \"react\";\nimport axios, {put} from \"axios\";\n\nimport { Redirect } from 'react-router';\n\nimport SideMenu from './../SideMenu';\n\n\nimport \"semantic-ui-css/semantic.min.css\";\n\n\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Segment,\n  Checkbox\n} from \"semantic-ui-react\";\n\nimport \"./new_ad.css\"\n\nexport default class AccForm extends Component {\n\tstate = {\n\t    user:\"\",\n      pass:\"\",\n      number:\"\",\n      name:\"\",\n      image:\"\",\n      redirect: false,\n      redirectBack: false,\n  \t};\n\n  \tfileInputRef = React.createRef();\n\n  \tcomponentDidMount() {\n  \t\tif (this.props.classIn===\"editacc\") {\n  \t\t\tthis.setState({\n  \t\t\tuser:\"سیام\",\n        pass:\"شسیبشس\",\n        number:\"09121406265\",\n        name:\"کیمیا یزدانی\",\n        image:\"/images/books.jpg\",\n  \t\t\t})\n  \t\t}\n  \t};\n redirectToReg = (e) => {\n    this.setState({\n      redirectBack: true\n    })\n  };\n\n\tfileChange = (e) => {\n\t    this.setState({ image: e.target.files[0] }, () => {\n\t      console.log(\"File uploaded --->\", this.state.image);\n\t    });\n  \t};\n\n  \tfileUpload = file => {\n\t  \tconst url = \"http://localhost:8000/api/asknima\";\n\t    const formData = new FormData();\n\t    formData.append(\"file\", file);\n\n\t    const config = {\n\t      headers: {\n\t        \"Content-type\": \"multipart/form-data\"\n\t      }\n\t    };\n\t    return put(url, formData, config);\n  \t};\n\n  \thandleToggle = (e) => {\n  \t\tthis.setState ({\n  \t\t\tfor_sale: !this.state.for_sale\n  \t\t})\n  \t};\n\n\thandleInput = (e) => { \n\t\t\n\t    this.setState({ \n\t        [e.target.name]: e.target.value, \n\t    }); \n\t\t\n\t}; \n  renderRedirectBack = (e) => {\n        if (this.state.redirectBack) {\n            return (\n            <Redirect to={{pathname: '/acc/'}} />\n            )\n        }\n        if (this.state.redirect) {\n            return (\n                <Redirect to={{\n                    pathname:'/ad/',\n                }} /> )\n        }\n    };\n\thandleSubmit = (e) => { \n\t  e.preventDefault(); \n\t  this.fileUpload(this.state.image).then(response => {\n      \tconsole.log(response.data);\n    });\n\n\n\t  axios \n\t      .post(\"http://localhost:8000/api/asknima\", { \n\t          user: this.state.user, \n            pass: this.state.pass, \n            name: this.state.name,\n            number: this.state.number,\n            image: this.state.image\n\t      }) \n        .then((res) => { \n              this.setState({\n                redirect: true\n              })\n            })\n\t      .catch((err) => {\n\t        \n\t        \n\t      }); \n\t}; \n\trender () {\n\t\treturn (\n\n\t\t\t<div  className=\"App\">\n\n\t\t\t\t<SideMenu classIn={this.props.classIn} logged_in={this.props.logged_in}/>\n\t\t\t\t<div class=\"ui container\">\n\n        <div class=\"ui message\">\n            <h1 class=\"ui huge header\">کتاب‌باز</h1>\n            <p class=\"lead\">\n                مکانی برای تبادل کتاب های شما\n            </p>\n        </div>\n    </div>\n    <br />\n    <br />\n\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" dir=\"rtl\">\n    <Grid.Column style={{ maxWidth: 700, backgroundColor:\"#e0e0eb\"}} >\n           \n            \n    <Form onSubmit={this.handleSubmit} class=\"ui right\">\n    <Form.Field>\n      <label style={{textAlign:\"right\"}}>تصویر پروفایل:</label>\n      <Form.Input\n        placeHolder= \"تصویر پروفایل\"\n      \tref={this.fileInputRef}\n      \ttype=\"file\"\n      \tname=\"image\"\n      \tonChange= {this.fileChange}\n      />\n    </Form.Field>\n    <Form.Field>\n\n      <label style={{textAlign:\"right\"}}>نام و نام خانوادگی:</label>\n      <input\n        placeHolder= \"نام و نام خانوادگی\"\n        name=\"name\"\n        value={this.state.name}\n        onChange= {this.handleInput}\n\n      />\n      </Form.Field>\n       <Form.Field>\n\n      <label style={{textAlign:\"right\"}}>شماره‌ی همراه:</label>\n      <input\n        placeHolder= \"شماره‌ی همراه\"\n        name=\"number\"\n        value={this.state.number}\n        onChange= {this.handleInput}\n\n      />\n      </Form.Field>\n    <Form.Field>\n\n      <label style={{textAlign:\"right\"}}>نام کاربری:</label>\n      <input\n        placeHolder= \"نام کاربری\"\n      \tname=\"user\"\n      \tvalue={this.state.user}\n      \tonChange= {this.handleInput}\n\n      />\n    </Form.Field>\n    <Form.Field>\n      <label style={{textAlign:\"right\"}}>رمز عبور:</label>\n      <input\n        dir=\"rtl\"\n      \tname=\"pass\"\n        type=\"password\"\n      \tvalue={this.state.pass}\n      \tonChange= {this.handleInput}\n        placeHolder=\"رمز عبور\"\n      />\n    </Form.Field>\n  \n    \n    \n\n    {this.props.classIn===\"editacc\"? <Button type='submit' color=\"green\" >ثبت</Button>:\n    <Button.Group>\n    <Button primary onClick={this.redirectToReg.bind(this)}>عضو هستید</Button>\n    <Button.Or text='یا' />\n    <Button positive onClick={this.handleSubmit}>ساخت اکانت</Button>\n  </Button.Group>}\n\n  </Form>\n  {this.renderRedirectBack()}\n {this.state.error_message && <Message\n      error\n      header='مشکل در ثبت اطلاعات'\n      content= {this.state.error_message}\n    />}\n\n                      </Grid.Column>\n\n        </Grid>\n    </div>\n\t\t\t)\n\t}\n}","/home/kimia/Desktop/bookapp/bookapp/src/Pages/SignIn.js",["79","80","81","82","83"],"/home/kimia/Desktop/bookapp/bookapp/src/SideMenu.js",["84","85","86"],{"ruleId":"87","severity":1,"message":"88","line":1,"column":8,"nodeType":"89","messageId":"90","endLine":1,"endColumn":12},{"ruleId":"87","severity":1,"message":"91","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":13},{"ruleId":"92","severity":1,"message":"93","line":39,"column":25,"nodeType":"94","endLine":39,"endColumn":101},{"ruleId":"92","severity":1,"message":"93","line":64,"column":9,"nodeType":"94","endLine":64,"endColumn":120},{"ruleId":"87","severity":1,"message":"95","line":49,"column":18,"nodeType":"89","messageId":"90","endLine":49,"endColumn":21},{"ruleId":"96","severity":1,"message":"97","line":50,"column":20,"nodeType":"94","endLine":50,"endColumn":23},{"ruleId":"96","severity":1,"message":"97","line":54,"column":20,"nodeType":"94","endLine":54,"endColumn":23},{"ruleId":"96","severity":1,"message":"97","line":79,"column":33,"nodeType":"94","endLine":79,"endColumn":64},{"ruleId":"98","severity":1,"message":"99","line":81,"column":43,"nodeType":"100","messageId":"101","endLine":81,"endColumn":45},{"ruleId":"96","severity":1,"message":"97","line":83,"column":37,"nodeType":"94","endLine":83,"endColumn":40},{"ruleId":"102","severity":1,"message":"103","line":92,"column":33,"nodeType":"94","endLine":92,"endColumn":108},{"ruleId":"87","severity":1,"message":"104","line":10,"column":3,"nodeType":"89","messageId":"90","endLine":10,"endColumn":7},{"ruleId":"87","severity":1,"message":"105","line":11,"column":3,"nodeType":"89","messageId":"90","endLine":11,"endColumn":7},{"ruleId":"87","severity":1,"message":"106","line":12,"column":3,"nodeType":"89","messageId":"90","endLine":12,"endColumn":9},{"ruleId":"87","severity":1,"message":"107","line":13,"column":3,"nodeType":"89","messageId":"90","endLine":13,"endColumn":10},{"ruleId":"87","severity":1,"message":"108","line":14,"column":3,"nodeType":"89","messageId":"90","endLine":14,"endColumn":10},{"ruleId":"87","severity":1,"message":"109","line":15,"column":3,"nodeType":"89","messageId":"90","endLine":15,"endColumn":11},{"ruleId":"96","severity":1,"message":"97","line":106,"column":41,"nodeType":"94","endLine":106,"endColumn":44},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"87","severity":1,"message":"106","line":16,"column":3,"nodeType":"89","messageId":"90","endLine":16,"endColumn":9},{"ruleId":"87","severity":1,"message":"108","line":18,"column":3,"nodeType":"89","messageId":"90","endLine":18,"endColumn":10},{"ruleId":"87","severity":1,"message":"106","line":16,"column":3,"nodeType":"89","messageId":"90","endLine":16,"endColumn":9},{"ruleId":"87","severity":1,"message":"108","line":18,"column":3,"nodeType":"89","messageId":"90","endLine":18,"endColumn":10},{"ruleId":"87","severity":1,"message":"109","line":19,"column":3,"nodeType":"89","messageId":"90","endLine":19,"endColumn":11},{"ruleId":"87","severity":1,"message":"91","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":13},{"ruleId":"87","severity":1,"message":"114","line":2,"column":16,"nodeType":"89","messageId":"90","endLine":2,"endColumn":19},{"ruleId":"87","severity":1,"message":"106","line":16,"column":3,"nodeType":"89","messageId":"90","endLine":16,"endColumn":9},{"ruleId":"87","severity":1,"message":"108","line":18,"column":3,"nodeType":"89","messageId":"90","endLine":18,"endColumn":10},{"ruleId":"87","severity":1,"message":"109","line":19,"column":3,"nodeType":"89","messageId":"90","endLine":19,"endColumn":11},{"ruleId":"87","severity":1,"message":"91","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":13},{"ruleId":"115","severity":1,"message":"116","line":5,"column":2,"nodeType":"117","messageId":"118","endLine":7,"endColumn":3},{"ruleId":"92","severity":1,"message":"93","line":14,"column":17,"nodeType":"94","endLine":14,"endColumn":75},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'buy' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Form' is defined but never used.","'Grid' is defined but never used.","'Header' is defined but never used.","'Message' is defined but never used.","'Segment' is defined but never used.","'Checkbox' is defined but never used.","no-native-reassign",["119"],"no-negated-in-lhs",["120"],"'put' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]